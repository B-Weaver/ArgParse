<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.9 (Jython 2.7.0 on java1.8.0_71)" generated="20160229 12:23:22.812">
<suite source="C:\Users\Barry\CS310\ArgParse\acceptance\ArgParserTest.txt" name="ArgParserTest" id="s1">
<test name="Test Volume Calculator Normal Function" id="s1-t1">
<kw library="ArgParserKeywords" name="Start Volume Calculator With Arguments">
<arguments>
<arg>7</arg>
<arg>5</arg>
<arg>2</arg>
</arguments>
<msg level="INFO" timestamp="20160229 12:23:23.333">************0************
************1************
************2************



7
5
2</msg>
<status endtime="20160229 12:23:23.335" starttime="20160229 12:23:23.324" status="PASS"></status>
</kw>
<kw library="ArgParserKeywords" name="Get Length">
<assign>
<var>${length}</var>
</assign>
<msg level="WARN" timestamp="20160229 12:23:23.338">Keyword 'Get Length' found both from a custom test library 'ArgParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="INFO" timestamp="20160229 12:23:23.358">${length} = 7</msg>
<status endtime="20160229 12:23:23.360" starttime="20160229 12:23:23.339" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>7</arg>
<arg>${length}</arg>
</arguments>
<status endtime="20160229 12:23:23.379" starttime="20160229 12:23:23.371" status="PASS"></status>
</kw>
<kw library="ArgParserKeywords" name="Get Width">
<assign>
<var>${width}</var>
</assign>
<msg level="INFO" timestamp="20160229 12:23:23.388">${width} = 5</msg>
<status endtime="20160229 12:23:23.389" starttime="20160229 12:23:23.384" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>5</arg>
<arg>${width}</arg>
</arguments>
<status endtime="20160229 12:23:23.399" starttime="20160229 12:23:23.393" status="PASS"></status>
</kw>
<kw library="ArgParserKeywords" name="Get Height">
<assign>
<var>${height}</var>
</assign>
<msg level="INFO" timestamp="20160229 12:23:23.409">${height} = 2</msg>
<status endtime="20160229 12:23:23.410" starttime="20160229 12:23:23.405" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>2</arg>
<arg>${height}</arg>
</arguments>
<status endtime="20160229 12:23:23.419" starttime="20160229 12:23:23.412" status="PASS"></status>
</kw>
<kw library="ArgParserKeywords" name="Get Program Output">
<assign>
<var>${output}</var>
</assign>
<msg level="INFO" timestamp="20160229 12:23:23.425">${output} = 70</msg>
<status endtime="20160229 12:23:23.426" starttime="20160229 12:23:23.421" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${output}</arg>
<arg>70</arg>
</arguments>
<status endtime="20160229 12:23:23.433" starttime="20160229 12:23:23.428" status="PASS"></status>
</kw>
<status critical="yes" endtime="20160229 12:23:23.436" starttime="20160229 12:23:23.312" status="PASS"></status>
</test>
<test name="Test Unrecognized Argument" id="s1-t2">
<kw library="ArgParserKeywords" name="Start Volume Calculator With Arguments">
<arguments>
<arg>7</arg>
<arg>5</arg>
<arg>2</arg>
<arg>43</arg>
</arguments>
<msg level="INFO" timestamp="20160229 12:23:23.456">************0************
************1************
************2************
************3************



7
5
2
43</msg>
<status endtime="20160229 12:23:23.458" starttime="20160229 12:23:23.449" status="PASS"></status>
</kw>
<kw library="ArgParserKeywords" name="Get Program Output">
<assign>
<var>${output}</var>
</assign>
<msg level="INFO" timestamp="20160229 12:23:23.463">${output} = usage: java VolumeCalculator length width height
VolumeCalculator.java: error: unrecognized arguments: 43</msg>
<status endtime="20160229 12:23:23.464" starttime="20160229 12:23:23.460" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expected}</arg>
<arg>${output}</arg>
</arguments>
<status endtime="20160229 12:23:23.473" starttime="20160229 12:23:23.466" status="PASS"></status>
</kw>
<status critical="yes" endtime="20160229 12:23:23.474" starttime="20160229 12:23:23.444" status="PASS"></status>
</test>
<test name="Test Absurd Program Normal Function" id="s1-t3">
<kw library="ArgParserKeywords" name="Start Absurd Program With Arguments">
<arguments>
<arg>dog</arg>
<arg>2</arg>
<arg>true</arg>
<arg>3.5</arg>
</arguments>
<status endtime="20160229 12:23:23.492" starttime="20160229 12:23:23.487" status="PASS"></status>
</kw>
<kw library="ArgParserKeywords" name="Get Pet">
<assign>
<var>${pet}</var>
</assign>
<msg level="INFO" timestamp="20160229 12:23:23.499">${pet} = dog</msg>
<status endtime="20160229 12:23:23.501" starttime="20160229 12:23:23.495" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>dog</arg>
<arg>${pet}</arg>
</arguments>
<status endtime="20160229 12:23:23.509" starttime="20160229 12:23:23.503" status="PASS"></status>
</kw>
<kw library="ArgParserKeywords" name="Get Number">
<assign>
<var>${number}</var>
</assign>
<msg level="INFO" timestamp="20160229 12:23:23.514">${number} = 2</msg>
<status endtime="20160229 12:23:23.515" starttime="20160229 12:23:23.511" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>2</arg>
<arg>${number}</arg>
</arguments>
<status endtime="20160229 12:23:23.524" starttime="20160229 12:23:23.518" status="PASS"></status>
</kw>
<kw library="ArgParserKeywords" name="Get Rainy">
<assign>
<var>${rainy}</var>
</assign>
<msg level="INFO" timestamp="20160229 12:23:23.530">${rainy} = true</msg>
<status endtime="20160229 12:23:23.531" starttime="20160229 12:23:23.526" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>true</arg>
<arg>${rainy}</arg>
</arguments>
<status endtime="20160229 12:23:23.543" starttime="20160229 12:23:23.533" status="PASS"></status>
</kw>
<kw library="ArgParserKeywords" name="Get Bathrooms">
<assign>
<var>${bathrooms}</var>
</assign>
<msg level="INFO" timestamp="20160229 12:23:23.551">${bathrooms} = 3.5</msg>
<status endtime="20160229 12:23:23.551" starttime="20160229 12:23:23.546" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>3.5</arg>
<arg>${bathrooms}</arg>
</arguments>
<status endtime="20160229 12:23:23.559" starttime="20160229 12:23:23.554" status="PASS"></status>
</kw>
<status critical="yes" endtime="20160229 12:23:23.565" starttime="20160229 12:23:23.480" status="PASS"></status>
</test>
<test name="Test Usage Message" id="s1-t4">
<kw library="ArgParserKeywords" name="Start Program With Arguments">
<arguments>
<arg>-h</arg>
</arguments>
<status endtime="20160229 12:23:23.586" starttime="20160229 12:23:23.580" status="PASS"></status>
</kw>
<kw library="ArgParserKeywords" name="Get Program Output">
<assign>
<var>${output}</var>
</assign>
<msg level="INFO" timestamp="20160229 12:23:23.592">${output} = usage: java VolumeCalculator length width height
Calculate the volume of a box.
positional arguments:
length the length of the box (float)
width the width of the box (float)
height the height of the b...</msg>
<status endtime="20160229 12:23:23.593" starttime="20160229 12:23:23.589" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedB}</arg>
<arg>${output}</arg>
</arguments>
<status endtime="20160229 12:23:23.641" starttime="20160229 12:23:23.635" status="PASS"></status>
</kw>
<status critical="yes" endtime="20160229 12:23:23.646" starttime="20160229 12:23:23.575" status="PASS"></status>
</test>
<test name="Test Incorrect Datatype Message" id="s1-t5">
<kw library="ArgParserKeywords" name="Start Program With Arguments">
<arguments>
<arg>7</arg>
<arg>something</arg>
<arg>2</arg>
</arguments>
<status endtime="20160229 12:23:23.665" starttime="20160229 12:23:23.660" status="PASS"></status>
</kw>
<kw library="ArgParserKeywords" name="Get Program Output">
<assign>
<var>${output}</var>
</assign>
<msg level="INFO" timestamp="20160229 12:23:23.671">${output} = usage: java VolumeCalculator length width height
VolumeCalculator.java: error: argument width: invalid float value: something</msg>
<status endtime="20160229 12:23:23.672" starttime="20160229 12:23:23.668" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expectedC}</arg>
<arg>${output}</arg>
</arguments>
<status endtime="20160229 12:23:23.681" starttime="20160229 12:23:23.674" status="PASS"></status>
</kw>
<status critical="yes" endtime="20160229 12:23:23.682" starttime="20160229 12:23:23.655" status="PASS"></status>
</test>
<test name="Test Named Argument Defaults" id="s1-t6">
<kw library="ArgParserKeywords" name="Start Volume Calcuator With Arguments">
<arguments>
<arg>7</arg>
<arg>3</arg>
<arg>2</arg>
</arguments>
<msg level="INFO" timestamp="20160229 12:23:23.699">************0************
************1************
************2************



7
3
2</msg>
<status endtime="20160229 12:23:23.700" starttime="20160229 12:23:23.696" status="PASS"></status>
</kw>
<kw library="ArgParserKeywords" name="Get Length">
<assign>
<var>${length}</var>
</assign>
<msg level="WARN" timestamp="20160229 12:23:23.338">Keyword 'Get Length' found both from a custom test library 'ArgParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160229 12:23:23.704">Keyword 'Get Length' found both from a custom test library 'ArgParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="INFO" timestamp="20160229 12:23:23.726">${length} = 7</msg>
<status endtime="20160229 12:23:23.727" starttime="20160229 12:23:23.705" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>7</arg>
<arg>${length}</arg>
</arguments>
<status endtime="20160229 12:23:23.739" starttime="20160229 12:23:23.729" status="PASS"></status>
</kw>
<kw library="ArgParserKeywords" name="Get Width">
<assign>
<var>${width}</var>
</assign>
<msg level="INFO" timestamp="20160229 12:23:23.745">${width} = 3</msg>
<status endtime="20160229 12:23:23.746" starttime="20160229 12:23:23.742" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>3</arg>
<arg>${width}</arg>
</arguments>
<status endtime="20160229 12:23:23.755" starttime="20160229 12:23:23.748" status="PASS"></status>
</kw>
<kw library="ArgParserKeywords" name="Get Height">
<assign>
<var>${height}</var>
</assign>
<msg level="INFO" timestamp="20160229 12:23:23.763">${height} = 2</msg>
<status endtime="20160229 12:23:23.763" starttime="20160229 12:23:23.759" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>2</arg>
<arg>${height}</arg>
</arguments>
<status endtime="20160229 12:23:23.772" starttime="20160229 12:23:23.767" status="PASS"></status>
</kw>
<kw library="ArgParserKeywords" name="Get Type">
<assign>
<var>${type}</var>
</assign>
<msg level="FAIL" timestamp="20160229 12:23:23.786">ArgumentNotFoundException: The argument type was not found</msg>
<status endtime="20160229 12:23:23.787" starttime="20160229 12:23:23.773" status="FAIL"></status>
</kw>
<status critical="yes" endtime="20160229 12:23:23.790" starttime="20160229 12:23:23.691" status="FAIL">ArgumentNotFoundException: The argument type was not found</status>
</test>
<test name="Test Named Argument Single" id="s1-t7">
<kw library="ArgParserKeywords" name="Start Volume Calcuator With Arguments">
<arguments>
<arg>7</arg>
<arg>3</arg>
<arg>2</arg>
<arg>--type</arg>
<arg>ellipsoid</arg>
</arguments>
<msg level="INFO" timestamp="20160229 12:23:23.819">************0************
************1************
************2************
************3************
type</msg>
<status endtime="20160229 12:23:23.821" starttime="20160229 12:23:23.809" status="PASS"></status>
</kw>
<kw library="ArgParserKeywords" name="Get Length">
<assign>
<var>${length}</var>
</assign>
<msg level="WARN" timestamp="20160229 12:23:23.338">Keyword 'Get Length' found both from a custom test library 'ArgParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160229 12:23:23.704">Keyword 'Get Length' found both from a custom test library 'ArgParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160229 12:23:23.823">Keyword 'Get Length' found both from a custom test library 'ArgParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="INFO" timestamp="20160229 12:23:23.860">${length} = None</msg>
<status endtime="20160229 12:23:23.860" starttime="20160229 12:23:23.823" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>7</arg>
<arg>${length}</arg>
</arguments>
<msg level="FAIL" timestamp="20160229 12:23:23.870">7 != None</msg>
<status endtime="20160229 12:23:23.872" starttime="20160229 12:23:23.862" status="FAIL"></status>
</kw>
<status critical="yes" endtime="20160229 12:23:23.875" starttime="20160229 12:23:23.804" status="FAIL">7 != None</status>
</test>
<test name="Test Named Argument Multiple" id="s1-t8">
<kw library="ArgParserKeywords" name="Start Volume Calcuator With Arguments">
<arguments>
<arg>7</arg>
<arg>3</arg>
<arg>2</arg>
<arg>--type</arg>
<arg>ellipsoid</arg>
<arg>--digits</arg>
<arg>1</arg>
</arguments>
<msg level="INFO" timestamp="20160229 12:23:23.895">************0************
************1************
************2************
************3************
type</msg>
<status endtime="20160229 12:23:23.896" starttime="20160229 12:23:23.890" status="PASS"></status>
</kw>
<kw library="ArgParserKeywords" name="Get Length">
<assign>
<var>${length}</var>
</assign>
<msg level="WARN" timestamp="20160229 12:23:23.338">Keyword 'Get Length' found both from a custom test library 'ArgParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160229 12:23:23.704">Keyword 'Get Length' found both from a custom test library 'ArgParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160229 12:23:23.823">Keyword 'Get Length' found both from a custom test library 'ArgParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160229 12:23:23.898">Keyword 'Get Length' found both from a custom test library 'ArgParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="INFO" timestamp="20160229 12:23:23.942">${length} = None</msg>
<status endtime="20160229 12:23:23.942" starttime="20160229 12:23:23.898" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>7</arg>
<arg>${length}</arg>
</arguments>
<msg level="FAIL" timestamp="20160229 12:23:23.947">7 != None</msg>
<status endtime="20160229 12:23:23.947" starttime="20160229 12:23:23.944" status="FAIL"></status>
</kw>
<status critical="yes" endtime="20160229 12:23:23.949" starttime="20160229 12:23:23.883" status="FAIL">7 != None</status>
</test>
<status endtime="20160229 12:23:23.958" starttime="20160229 12:23:22.829" status="FAIL"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="3">Critical Tests</stat>
<stat pass="5" fail="3">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="5" fail="3" name="ArgParserTest" id="s1">ArgParserTest</stat>
</suite>
</statistics>
<errors>
<msg level="WARN" timestamp="20160229 12:23:23.338">Keyword 'Get Length' found both from a custom test library 'ArgParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160229 12:23:23.338">Keyword 'Get Length' found both from a custom test library 'ArgParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160229 12:23:23.704">Keyword 'Get Length' found both from a custom test library 'ArgParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160229 12:23:23.338">Keyword 'Get Length' found both from a custom test library 'ArgParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160229 12:23:23.704">Keyword 'Get Length' found both from a custom test library 'ArgParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160229 12:23:23.823">Keyword 'Get Length' found both from a custom test library 'ArgParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160229 12:23:23.338">Keyword 'Get Length' found both from a custom test library 'ArgParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160229 12:23:23.704">Keyword 'Get Length' found both from a custom test library 'ArgParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160229 12:23:23.823">Keyword 'Get Length' found both from a custom test library 'ArgParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
<msg level="WARN" timestamp="20160229 12:23:23.898">Keyword 'Get Length' found both from a custom test library 'ArgParserKeywords' and a standard library 'BuiltIn'. The custom keyword is used. To select explicitly, and to get rid of this warning, use either 'ArgParserKeywords.Get Length' or 'BuiltIn.Get Length'.</msg>
</errors>
</robot>
